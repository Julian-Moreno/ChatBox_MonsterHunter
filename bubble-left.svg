<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version="1.1"
   id="svg1"
   width="1295.4734"
   height="347.60681"
   viewBox="0 0 1295.4734 347.60681"
   xml:space="preserve"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
     id="defs1"><linearGradient
       id="linearGradient65"><stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0"
         id="stop65" /><stop
         style="stop-color:#ffffff;stop-opacity:0;"
         offset="0.75047618"
         id="stop66" /></linearGradient><linearGradient
       id="linearGradient62"><stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0.46285716"
         id="stop62" /><stop
         style="stop-color:#ffffff;stop-opacity:0;"
         offset="1"
         id="stop63" /></linearGradient><linearGradient
       id="swatch105"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop105" /></linearGradient><filter
       height="1.2052097"
       y="-0.10260483"
       width="1.1060573"
       x="-0.053028667"
       style="color-interpolation-filters:sRGB"
       id="filter58"><feGaussianBlur
         stdDeviation="0.041048692"
         in="SourceGraphic"
         result="result1"
         id="feGaussianBlur56" /><feTurbulence
         type="turbulence"
         baseFrequency="0.05"
         numOctaves="5"
         result="result0"
         id="feTurbulence56" /><feDisplacementMap
         in2="result0"
         in="result1"
         xChannelSelector="R"
         yChannelSelector="G"
         scale="3"
         result="result2"
         id="feDisplacementMap56" /><feBlend
         result="result5"
         in="result2"
         mode="multiply"
         in2="result2"
         id="feBlend56" /><feGaussianBlur
         stdDeviation="5"
         in="result2"
         result="result4"
         id="feGaussianBlur57" /><feComposite
         operator="arithmetic"
         in2="result5"
         in="result4"
         k2="0.25"
         k3="1"
         k1="1"
         id="feComposite57"
         k4="0" /><feComposite
         operator="in"
         in2="result2"
         id="feComposite58" /></filter><filter
       height="1.1259328"
       y="-0.06296641"
       width="1.9098169"
       x="-0.45490847"
       style="color-interpolation-filters:sRGB"
       id="filter60"><feGaussianBlur
         stdDeviation="0.13655653"
         in="SourceGraphic"
         result="result1"
         id="feGaussianBlur58" /><feTurbulence
         type="turbulence"
         baseFrequency="0.05"
         numOctaves="5"
         result="result0"
         id="feTurbulence58" /><feDisplacementMap
         in2="result0"
         in="result1"
         xChannelSelector="R"
         yChannelSelector="G"
         scale="3"
         result="result2"
         id="feDisplacementMap58" /><feBlend
         result="result5"
         in="result2"
         mode="multiply"
         in2="result2"
         id="feBlend58" /><feGaussianBlur
         stdDeviation="5"
         in="result2"
         result="result4"
         id="feGaussianBlur59" /><feComposite
         operator="arithmetic"
         in2="result5"
         in="result4"
         k2="0.25"
         k3="1"
         k1="1"
         id="feComposite59"
         k4="0" /><feComposite
         operator="in"
         in2="result2"
         id="feComposite60" /></filter><filter
       height="1.9097368"
       y="-0.45486842"
       width="1.0240064"
       x="-0.012003218"
       style="color-interpolation-filters:sRGB"
       id="filter62"><feGaussianBlur
         stdDeviation="0.34863455"
         in="SourceGraphic"
         result="result1"
         id="feGaussianBlur60" /><feTurbulence
         type="turbulence"
         baseFrequency="0.05"
         numOctaves="5"
         result="result0"
         id="feTurbulence60" /><feDisplacementMap
         in2="result0"
         in="result1"
         xChannelSelector="R"
         yChannelSelector="G"
         scale="3"
         result="result2"
         id="feDisplacementMap60" /><feBlend
         result="result5"
         in="result2"
         mode="multiply"
         in2="result2"
         id="feBlend60" /><feGaussianBlur
         stdDeviation="5"
         in="result2"
         result="result4"
         id="feGaussianBlur61" /><feComposite
         operator="arithmetic"
         in2="result5"
         in="result4"
         k2="0.25"
         k3="1"
         k1="1"
         id="feComposite61"
         k4="0" /><feComposite
         operator="in"
         in2="result2"
         id="feComposite62" /></filter><linearGradient
       xlink:href="#linearGradient62"
       id="linearGradient63"
       x1="196.92439"
       y1="27.729509"
       x2="1292.0378"
       y2="27.729509"
       gradientUnits="userSpaceOnUse" /><linearGradient
       xlink:href="#linearGradient65"
       id="linearGradient66"
       x1="5.7100892"
       y1="238.17014"
       x2="33.964935"
       y2="350.17014"
       gradientUnits="userSpaceOnUse" /><linearGradient
       xlink:href="#linearGradient62"
       id="linearGradient2"
       gradientUnits="userSpaceOnUse"
       x1="196.92439"
       y1="27.729509"
       x2="1292.0378"
       y2="27.729509" /><linearGradient
       xlink:href="#linearGradient62"
       id="linearGradient3"
       gradientUnits="userSpaceOnUse"
       x1="196.92439"
       y1="27.729509"
       x2="1292.0378"
       y2="27.729509" /><linearGradient
       xlink:href="#linearGradient62"
       id="linearGradient4"
       gradientUnits="userSpaceOnUse"
       x1="196.92439"
       y1="27.729509"
       x2="1292.0378"
       y2="27.729509" /><linearGradient
       xlink:href="#linearGradient65"
       id="linearGradient5"
       gradientUnits="userSpaceOnUse"
       x1="5.7100892"
       y1="238.17014"
       x2="33.964935"
       y2="350.17014" /><linearGradient
       xlink:href="#linearGradient65"
       id="linearGradient6"
       gradientUnits="userSpaceOnUse"
       x1="5.7100892"
       y1="238.17014"
       x2="33.964935"
       y2="350.17014" /></defs><g
     id="g1"
     transform="translate(3.4355611,-0.78241862)"><g
       id="g99"
       transform="matrix(1.045056,0,0,1.045056,2460.702,100.48679)"
       style="fill:#ffffff;filter:url(#filter58)"><path
         d="m -2343.7857,26.727766 4.1997,3.995228 c 2.3089,2.197456 4.2805,3.999745 4.381,4.004308 0.1,0.0044 2.0723,-1.787359 4.3812,-3.981607 l 4.195,-3.990688 -8.5762,-0.01371 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path53" /><path
         d="m -2321.5031,26.723226 3.9998,4.01793 c 2.2018,2.208599 4.0923,4.013387 4.1994,4.013387 0.107,0 1.9977,-1.804788 4.1995,-4.013387 l 4.0044,-4.01793 h -8.2039 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path52" /><path
         d="m -2315.7102,-8.5936843 c -0.077,0.076685 2.696,3.7689653 6.1564,8.20837894 3.4605,4.43941176 6.3992,8.08515666 6.533,8.09941746 0.1349,0.01418 0.4094,-0.7533344 0.613,-1.7070521 1.918,-8.9748828 2.6376,-12.9808336 2.3745,-13.2114943 -0.3299,-0.2890819 -15.4382,-1.6279421 -15.6769,-1.38925 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path50" /><path
         d="m -2277.5103,-15.258451 c -0.4398,0 -12.123,12.4256958 -11.9993,12.76203 0.063,0.1733005 6.1146,7.0642132 13.443,15.313528 l 13.3252,15.000267 h 6.1153 6.1155 v -2.692239 -2.692239 l -5.5707,0.167991 -5.566,0.167992 -4.4221,-7.604553 -4.4265,-7.6045535 -3.1962,-10.5873563 c -1.7587,-5.8227045 -3.2796,-10.9573392 -3.3777,-11.4091012 -0.098,-0.451761 -0.2969,-0.821745 -0.4405,-0.821745 z m -1.4754,6.5785062 c 0.1,-0.00449 0.6843,3.0322662 1.2985,6.7464878 0.6139,3.7142221 1.0209,6.7555677 0.9079,6.7555677 -0.1139,0 -1.7087,-1.5045164 -3.5458,-3.3414637 l -3.3414,-3.3414635 2.2473,-3.405024 c 1.2359,-1.8727799 2.3331,-3.409541 2.4335,-3.4141043 z m -36.7245,0.08626 c 0.2387,-0.2386921 15.347,1.1001681 15.6769,1.38925 0.2631,0.2306597 -0.4565,4.2366115 -2.3745,13.211495 -0.2045,0.9537177 -0.4788,1.7213455 -0.613,1.7070521 -0.1348,-0.014179 -3.0725,-3.6600057 -6.533,-8.09941746 -3.4604,-4.43941434 -6.2329,-8.13169404 -6.1564,-8.20837964 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path48" /><path
         d="m -2308.4368,-26.817374 c -0.4282,0.428022 -2.6318,9.562905 -2.3701,9.82463 0.1627,0.162476 2.7513,1.753094 5.7478,3.536685 2.9965,1.78358 5.5697,3.255111 5.7203,3.273364 0.1511,0.01822 0.2725,-1.927786 0.2725,-4.326651 v -4.362971 l -4.599,-4.058789 c -2.5305,-2.232056 -4.6781,-3.9797 -4.7715,-3.886268 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path46" /><path
         d="m -2308.4368,-26.817374 c 0.093,-0.09343 2.241,1.654212 4.7715,3.886268 l 4.599,4.058789 v 4.362971 c 0,2.398865 -0.1209,4.344881 -0.2725,4.326651 -0.151,-0.01825 -2.7238,-1.489784 -5.7203,-3.273364 -2.9965,-1.783591 -5.5853,-3.37421 -5.7478,-3.536685 -0.2617,-0.261725 1.9419,-9.396608 2.3701,-9.82463 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path45" /><path
         d="m -2297.8088,-37.445589 c -0.056,0.05536 -0.9967,2.172228 -2.0883,4.703473 l -1.984,4.603593 4.2357,4.612673 c 2.3304,2.537816 4.3371,4.616904 4.4584,4.617213 0.1209,3.08e-4 0.9975,-1.261446 1.9477,-2.8012 0.9503,-1.539754 1.9675,-3.159265 2.2564,-3.600246 0.4982,-0.760328 0.2864,-1.098667 -4.0997,-6.519486 -2.5437,-3.143998 -4.6701,-5.671349 -4.7262,-5.61602 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path44" /><path
         d="m -2297.8088,-37.445589 c 0.056,-0.05533 2.1825,2.472022 4.7262,5.61602 4.3861,5.420819 4.5979,5.759158 4.0997,6.519486 -0.2889,0.440981 -1.3061,2.060492 -2.2564,3.600246 -0.9502,1.539754 -1.8261,2.801508 -1.9477,2.8012 -0.1208,-3.09e-4 -2.128,-2.079397 -4.4584,-4.617213 l -4.2357,-4.612673 1.984,-4.603593 c 1.0916,-2.531245 2.033,-4.648109 2.0883,-4.703473 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path43" /><path
         d="m -2287.3848,-46.639154 c -0.2355,0.01076 -4.5249,6.907274 -4.6762,7.518293 -0.063,0.254766 2.7299,4.455852 6.2062,9.334306 l 6.3196,8.871223 0.1139,-2.92378 0.1139,-2.919241 -3.9454,-9.942671 c -2.1711,-5.46944 -4.0309,-9.942694 -4.1313,-9.93813 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path42" /><path
         d="m -2287.3848,-46.639154 c 0.1,-0.0046 1.9603,4.46869 4.1313,9.93813 l 3.9454,9.942671 -0.1139,2.919241 -0.1139,2.92378 -6.3196,-8.871223 c -3.4763,-4.878454 -6.2694,-9.07954 -6.2062,-9.334306 0.1511,-0.611019 4.4407,-7.507524 4.6762,-7.518293 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path41" /><path
         d="m -2255.373,-60.763195 c -0.077,-0.07722 -1.721,1.056172 -3.6501,2.515179 l -3.5049,2.651379 -0.023,12.430607 -0.023,12.435149 -2.547,1.230348 c -1.4019,0.67819 -2.6146,1.16326 -2.6922,1.075988 -0.079,-0.08725 -1.4179,-5.66352 -2.9784,-12.389748 -1.5602,-6.726227 -2.9028,-12.303022 -2.9828,-12.394289 -0.079,-0.09121 -1.4005,1.091858 -2.9372,2.62868 l -2.7968,2.79666 3.5729,11.33192 3.573,11.33192 -0.254,3.382325 -0.2543,3.382324 6.4695,8.5761203 c 3.5583,4.7162196 6.7373,8.85432077 7.0644,9.1981045 0.5553,0.58402742 0.7285,0.41468553 2.6376,-2.5832773 l 2.043,-3.2052629 -4.4491,-6.0155426 -4.4537,-6.011003 1.8793,-2.115655 c 1.484,-1.672487 1.9603,-2.013823 2.2657,-1.625331 0.2115,0.270509 2.7197,4.624103 5.5704,9.674808 l 5.195,9.1799455 -2.9465,6.3197249 -2.9512,6.3197248 1.639,1.6389518 c 0.9012,0.901242 1.6988,1.561664 1.7753,1.470971 0.077,-0.0907 1.6594,-2.423952 3.5139,-5.1847172 1.8547,-2.760765 3.5088,-5.0167353 3.6773,-5.0167353 0.5758,0 3.617,4.1629477 3.3234,4.5491117 -1.9247,2.5328992 -5.8085,7.7885298 -6.0291,8.1584388 -0.1836,0.30714 0.6644,1.91303 2.3654,4.485551 1.4573,2.204094 2.7694,3.876528 2.9191,3.718285 0.3729,-0.39367 5.9761,-9.977738 8.6853,-14.854983 l 2.2155,-3.9816091 -2.0068,-2.1655962 c -3.2252,-3.4836402 -10.6703,-15.3092277 -18.7775,-29.8234717 l -2.3291,-4.172289 -0.8308,-14.400982 c -0.4556,-7.920031 -0.8894,-14.464491 -0.967,-14.541724 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path40" /><path
         d="m -2218.9346,-68.699171 c -6.507,0.0023 -9.0045,0.141167 -11.096,0.612905 -1.4842,0.334781 -2.7783,0.685285 -2.8738,0.780884 -0.095,0.09554 0.5795,1.053936 1.4981,2.129276 3.8791,4.540523 5.887,9.282229 5.6569,13.352234 l -0.1371,2.437999 1.6071,-2.011236 c 2.3938,-2.997835 6.9477,-7.585032 12.3489,-12.435147 l 4.8124,-4.322111 -1.7115,-0.272403 c -0.941,-0.150929 -5.4881,-0.273542 -10.106,-0.272401 z m 7.2594,1.902273 c 0.1022,0.165737 -0.7485,1.082599 -1.8931,2.038474 v 0.0046 c -1.1448,0.955875 -3.8887,3.418165 -6.0974,5.475277 l -4.0135,3.740987 -0.023,-2.065715 c -0.023,-2.416205 -1.0535,-4.458521 -3.4642,-6.869069 -1.6455,-1.645506 -1.6537,-1.626724 1.1125,-2.242774 1.9767,-0.440285 14.1141,-0.50916 14.3782,-0.08173 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path37" /><path
         d="m -2345.8015,7.4666811 v 2.7194799 2.724019 h 2.4335 2.438 l -0.7127,-0.821747 c -0.3931,-0.451761 -1.4912,-1.678509 -2.438,-2.724019 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path254" /><path
         d="m -2226.2352,-81.692743 c -41.5815,5.310184 -74.5998,23.144219 -93.6835,50.603199 -4.9393,7.106871 -4.7203,7.069347 2.8148,-0.485783 4.0536,-4.064257 9.4509,-9.031152 12.1991,-11.22296 22.9354,-18.292281 49.3163,-29.035579 78.0613,-31.789305 6.599,-0.63217 20.2701,-0.706868 26.9632,-0.149814 8.0198,0.667442 21.5909,2.770893 21.0249,3.259742 -0.1581,0.137331 -1.6035,0.706007 -3.2097,1.262129 -9.1629,3.172461 -24.1353,11.814725 -34.863,20.125963 -5.1569,3.995341 -14.3812,13.122493 -17.4926,17.306603 -1.2692,1.706655 -2.433,3.151507 -2.5834,3.209803 -0.5777,0.22417 -3.4744,-6.953912 -5.4389,-13.470276 -3.1964,-10.603061 -3.4126,-16.752719 -0.5858,-16.752719 1.4543,0 2.6837,1.475342 4.2269,5.071217 1.7875,4.165435 4.4403,11.843209 5.1258,14.827745 l 0.5039,2.188295 0.2046,-2.737639 c 0.2919,-3.918849 -0.2374,-12.448104 -1.1623,-18.695853 l -0.7991,-5.370858 -7.6999,-0.104417 c -4.2357,-0.05772 -7.7439,-0.09056 -7.7952,-0.07264 -0.051,0.0179 0.2359,2.481446 0.6355,5.475279 2.4818,18.586623 6.3638,31.530967 11.0551,36.860522 0.8061,0.915832 1.579,1.533963 1.7161,1.371089 0.1372,-0.162872 1.7123,-2.105171 3.5049,-4.31303 16.6387,-20.493502 36.7926,-32.818036 59.1157,-36.156818 4.7582,-0.711649 14.8791,-0.810335 19.7129,-0.190678 10.6864,1.369933 22.1782,4.933095 32.7654,10.156053 l 4.2675,2.106575 -1.539,-1.593552 c -4.3303,-4.46791 -15.3533,-12.324364 -23.8124,-16.975179 -10.7434,-5.906567 -24.1492,-10.73999 -36.0344,-12.993573 -13.8189,-2.620252 -30.4776,-2.884398 -47.1982,-0.749106 z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path34" /><path
         d="m -2343.6041,-83.159173 v 24.547955 c 0,23.320203 0.042,24.515075 0.6401,23.771607 0.3471,-0.430474 7.9405,-8.70701 16.8754,-18.38713 8.9349,-9.680121 16.2996,-17.744518 16.3668,-17.924048 0.07,-0.18689 -4.1792,-0.326882 -9.9382,-0.326882 -7.8842,0 -10.0253,0.100859 -9.9063,0.458544 0.084,0.250978 0.7532,2.403029 1.4847,4.785194 l 1.3301,4.33119 -1.3982,1.511832 c -3.3159,3.583553 -7.622,7.895115 -7.8815,7.895115 -0.1557,0 -0.2815,-6.077617 -0.2815,-13.506596 v -13.506596 h 25.9826 25.9825 l -6.937,4.689853 c -14.3419,9.694347 -26.4123,19.391312 -35.7347,28.702084 -8.3192,8.308979 -13.2424,14.715994 -16.2487,21.152011 -2.5467,5.451598 -2.5335,5.326997 -2.5335,25.9145047 V 19.422854 h 21.211 c 16.898,0 21.179,-0.09252 21.0386,-0.458544 -0.2301,-0.598137 -23.5172,-32.730928 -24.371,-33.628017 -0.6336,-0.665504 -0.6827,-0.643664 -1.7705,0.858066 -1.5391,2.124603 -3.2088,6.6210851 -3.8726,10.4284539 -0.5595,3.20842021 -0.736,10.5031993 -0.3178,13.0344319 l 0.2232,1.3665502 h 5.9793 c 3.2866,0 5.9746,-0.09147 5.9746,-0.2043 0,-0.112784 -1.8789,-2.4243891 -4.1725,-5.139315 -4.6276,-5.47747143 -4.3712,-4.76355811 -3.3414,-9.3887871 l 0.3951,-1.7751526 7.2095,9.7292884 c 3.9653,5.3510142 7.2096,9.8871693 7.2096,10.0834123 3e-4,0.226662 -4.0269,0.324697 -11.0413,0.263321 l -11.046,-0.09988 -0.091,-15.6131702 c -0.084,-13.8444038 -0.028,-15.7511278 0.4993,-16.7935788 1.1502,-2.269634 8.2318,-12.736989 11.9767,-17.701586 20.821,-27.60148 42.3296,-43.827221 62.271,-46.980254 2.6992,-0.426743 -2.4194,-0.495841 -39.3347,-0.526643 z m 19.3633,13.919738 c 0,0 0,0 0,0 0.7973,-0.0065 1.8777,0.0035 3.0462,0.03178 l 4.2541,0.104417 -3.2371,3.218881 -3.2371,3.218884 -1.1576,-3.182564 c -0.4784,-1.313119 -0.8582,-2.483961 -0.9851,-3.019121 -0.042,-0.178382 -0.056,-0.28493 -0.037,-0.304181 0.039,-0.03849 0.5509,-0.06155 1.3484,-0.06811 z m -7.3141,72.6314365 1.7208,1.8977328 c 0.9468,1.0455098 2.0449,2.2722581 2.438,2.7240194 l 0.7127,0.8217467 h -2.438 -2.4335 V 6.111481 Z"
         style="fill:#ffffff;stroke-width:2.3245"
         id="path253" /></g><g
       id="g4"
       style="fill:url(#linearGradient63);filter:url(#filter62)"><path
         d="m 283.62305,13.619141 -1.94141,1.894531 c -1.81588,1.771037 -2.83749,2.432718 -15.76172,10.162109 -7.60212,4.546277 -13.97547,8.313481 -14.16015,8.373047 -0.2026,0.06529 -4.46451,-3.198179 -10.73243,-8.214844 L 230.625,17.507812 h 13.82227 c 7.88493,-8.2e-4 13.736,0.106494 13.62109,0.253907 -0.30967,0.397763 -6.56102,6.5625 -6.6543,6.5625 -0.0466,0 -0.54032,-0.731368 -1.10351,-1.63086 l -1.02344,-1.636718 h -5.29102 c -2.91149,0 -5.2712,0.05339 -5.24023,0.117187 0.0317,0.06343 2.9217,1.805562 6.42773,3.873047 l 6.37696,3.759766 12.61328,-7.466797 c 6.93763,-4.106372 12.63719,-7.523035 12.66797,-7.591797 0.0317,-0.06865 -15.09635,-0.116574 -33.61524,-0.103516 -18.51926,0.01119 -33.57528,0.106885 -33.46484,0.208985 0.1082,0.101483 9.5582,6.43317 20.99805,14.070312 11.43966,7.637179 20.82172,13.899711 20.84765,13.916016 0.028,0.01492 6.43292,-4.652889 14.23633,-10.376953 l 14.1875,-10.40625 h 73.625 2.4375 923.10745 v -7.4375 h -923.10745 -2.4375 z"
         style="opacity:1;fill:url(#linearGradient2);stroke-width:101.964;stroke-linecap:square;stroke-miterlimit:4.6;paint-order:stroke fill markers"
         id="path2" /><path
         d="m 278.125,25.683594 -1.85352,1.05664 -1.69531,0.992188 80.7832,-0.07422 H 1250.3672 V 25.822266 H 356.09375 Z"
         style="opacity:1;fill:url(#linearGradient3);stroke-width:389.55;stroke-linecap:square;stroke-miterlimit:4.6;paint-order:stroke fill markers"
         id="path4" /><path
         d="m 356.09375,25.822266 v 1.835937 h 894.27345 v -1.835937 z"
         style="opacity:1;fill:url(#linearGradient4);stroke-width:389.55;stroke-linecap:square;stroke-miterlimit:4.6;paint-order:stroke fill markers"
         id="path3" /></g><g
       id="g58"
       style="fill:url(#linearGradient66);fill-opacity:1;filter:url(#filter60)"><rect
         style="opacity:1;fill:url(#linearGradient5);fill-opacity:1;stroke-width:15.9908;stroke-linecap:square;stroke-miterlimit:4.6;paint-order:stroke fill markers"
         id="rect4"
         width="4.4836555"
         height="195.78273"
         x="18.037825"
         y="140.27876" /><rect
         style="fill:url(#linearGradient6);fill-opacity:1;stroke-width:15.9908;stroke-linecap:square;stroke-miterlimit:4.6;paint-order:stroke fill markers"
         id="rect4-2"
         width="4.4836555"
         height="195.78273"
         x="40.653545"
         y="140.27876" /></g></g><script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
